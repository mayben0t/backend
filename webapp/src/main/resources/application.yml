server:
  port: 8081
spring:
  datasource:
    name: mysql_blog
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      filters: stat
      driver-class-name: com.mysql.jdbc.Driver
      url: jdbc:mysql://localhost:3306/test1?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&useSSL=true
      username: root
      password: 123456
      initial-size: 1
      min-idle: 1
      max-active: 20
      max-wait: 60000
      time-between-eviction-runs-millis: 60000
      min-evictable-idle-time-millis: 300000
      validation-query: SELECT 'x'
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      pool-prepared-statements: false
      max-pool-prepared-statement-per-connection-size: 20
#  jpa:
#    show-sql: true
#    properties:
#      hibernate:
#        format_sql: true
  jackson:
    #日期格式化
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
    serialization:
      #格式化输出
      indent_output: true
mybatis:
  mapper-locations: classpath*:mapper/*.xml
  # <a href="https://www.cnblogs.com/kingsonfu/p/9245731.html"/>
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

# 打印mybatis中的sql语句和结果集
logging:
  level.com.company.shardingjdbc.mapper: TRACE

#    dataSources: #数据源配置，可配置多个data_source_name
#      <data_source_name>: #<!!数据库连接池实现类> `!!`表示实例化该类
#        driverClassName: #数据库驱动类名
#        url: #数据库url连接
#        username: #数据库用户名
#        password: #数据库密码
#        # ... 数据库连接池的其它属性

#dataSources:
#  ds0: !!com.alibaba.druid.pool.DruidDataSource
#    driverClassName: com.mysql.jdbc.Driver
#    url: jdbc:mysql://localhost:3306/test?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&useSSL=true
#    username: root
#    password: 123456
#  ds1: !!com.alibaba.druid.pool.DruidDataSource
#    driverClassName: com.mysql.jdbc.Driver
#    url: jdbc:mysql://localhost:3306/test1?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&useSSL=true
#    username: root
#    password: 123456
#
#shardingRule:
#  tables:
#    tb_user_product: # 逻辑表名 代码中sql用这个表名
#      actualDataNodes: ds1.tb_user_product${0..10}
##      databaseStrategy:
##        inline:
##          shardingColumn: user_id
##          algorithmExpression: ds${user_id % 10}
#      tableStrategy:
#        inline:
#          shardingColumn: user_id
#          algorithmExpression: tb_user_product${order_id % 10}
#      keyGenerator:
#        type: SNOWFLAKE
#        column: user_id
#  bindingTables:
#    - tb_user_product
##  broadcastTables:
##    - t_config
#
#  defaultDataSourceName: ds1
#  defaultTableStrategy:
#    none:
#  defaultKeyGenerator:
#    type: SNOWFLAKE
#    column: user_id
#
#props:
#  sql.show: true



#sharding:
#  jdbc:
#    datasource:
#      names: ds0,ds1
#      ds0:
#        type: com.alibaba.druid.pool.DruidDataSource
#        driver-class-name: com.mysql.jdbc.Driver
#        url: jdbc:mysql://localhost:3306/test?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&useSSL=true
#        username: root
#        password: 123456
#      ds1:
#        type: com.alibaba.druid.pool.DruidDataSource
#        driver-class-name: com.mysql.jdbc.Driver
#        url: jdbc:mysql://localhost:3306/test1?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&useSSL=true
#        username: root
#        password: 123456
#    config:
#      sharding:
#        props:
#          sql.show: true
#        tables:
#          tb_user_product:  #tb_user_product表
#            key-generator-column-name: id  #主键
#            actual-data-nodes: ds${1}.tb_user_product_${0..9}  #数据节点
#            database-strategy:  #分库策略
#              inline:
#                sharding-column: user_id
#                algorithm-expression: ds${1}
#            table-strategy:  #分表策略
#              inline:
#                shardingColumn: user_id
#                algorithm-expression: tb_user_product_${user_id % 10}
#          t_address:
#            key-generator-column-name: id
#            actual-data-nodes: ds${0..1}.t_address
#            database-strategy:
#              inline:
#                shardingColumn: lit
#                algorithm-expression: ds${lit % 2}

